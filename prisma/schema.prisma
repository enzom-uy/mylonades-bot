generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Nade {
  id           String   @id @default(uuid())
  description  String?  @db.Text
  map_id       String
  status       Status   @default(PENDING)
  author_id    String
  video_url    String   @unique
  title        String   @db.Text
  map          Map      @relation(fields: [map_id], references: [name])
  author       User     @relation(fields: [author_id], references: [discord_tag])
  createdAt    DateTime @default(now())
  nadeType     NadeType @relation(fields: [nadeTypeName], references: [name])
  nadeTypeName String
  Server       Server?  @relation(fields: [serverId], references: [id])
  serverId     String?

  @@index([map_id])
  @@index([author_id])
  @@index([nadeTypeName])
  @@index([serverId])
}

model Map {
  name  String @id
  nades Nade[]
}

model NadeType {
  name  String @id
  nades Nade[]
}

model User {
  id             String  @id @default(uuid())
  name           String  @unique
  discord_tag    String  @unique
  nades          Nade[]
  ServerAdmin    Server? @relation(fields: [serverAdminId], references: [id], name: "admin")
  ServerMember   Server? @relation(fields: [serverMemberId], references: [id], name: "members")
  serverAdminId  String?
  serverMemberId String?

  @@index([serverAdminId])
  @@index([serverMemberId])
}

model Server {
  id      String @id
  name    String
  admin   User[] @relation(name: "admin")
  members User[] @relation(name: "members")
  nades   Nade[]
}

enum Status {
  APPROVED
  PENDING
  DECLINED
}
